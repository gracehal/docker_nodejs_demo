# This is a basic workflow to help you get started with Actions

name: Deploy to ECR

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  workflow_dispatch:
    inputs:
      environment:
      type: environment
  workflow_call: 
    inputs:
      branch:
        required: true
        type: string
      environment:
        required: true
        type: string
        
        
  permissions:
    id-token: write
    contents: write
  
jobs:
  
  matrix_prep:
    name: Discover build strategy
    environment: ${{ inputs. environment }}
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.branch }}
      
    - name: Set desired commit SHA in output
      id: set_commit_sha
      run:
        echo "COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
    outputs:
      output1: ${{ steps.set_commit_sha.outputs.COMMIT_SHA }}
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: docker_nodejs_demo
        IMAGE_TAG: nodejs_demo_image
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
    - name: delete environment tag
      id: tag_version1
      uses: ClementTsang/delete-tag-and-release@v0.3.1
      with:
        tag_name: ${{ inputs.environment }}
        delete_release: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} #what is github token?
